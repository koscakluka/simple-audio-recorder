{"version":3,"file":"react.js","mappings":"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","sources":["webpack://ReactAudioRecorder/webpack/universalModuleDefinition","webpack://ReactAudioRecorder/./src/AudioRecorder.js","webpack://ReactAudioRecorder/./src/Timer.js","webpack://ReactAudioRecorder/./src/mp3worker/WorkerEncoder.js","webpack://ReactAudioRecorder/./src/utils.js","webpack://ReactAudioRecorder/external umd \"react\"","webpack://ReactAudioRecorder/webpack/bootstrap","webpack://ReactAudioRecorder/webpack/runtime/compat get default export","webpack://ReactAudioRecorder/webpack/runtime/define property getters","webpack://ReactAudioRecorder/webpack/runtime/hasOwnProperty shorthand","webpack://ReactAudioRecorder/webpack/runtime/make namespace object","webpack://ReactAudioRecorder/./src/react.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactAudioRecorder\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ReactAudioRecorder\"] = factory(root[\"react\"]);\n})(self, (__WEBPACK_EXTERNAL_MODULE_react__) => {\nreturn ","import WorkerEncoder from \"./mp3worker/WorkerEncoder.js\";\nimport Timer from \"./Timer.js\";\nimport {stopStream, detectIOS, detectSafari} from \"./utils.js\";\n\nconst AudioContext = window.AudioContext || window.webkitAudioContext;\n// Don't use audio worklet on iOS or safari, fall back to ScriptProcessor.\n// There are issues with dropped incoming audio data after ~45 seconds. Thus, the resulting audio would be shorter and sped up / glitchy.\n// Curiously, these same issues are present if *not using* AudioWorklet on Chrome\nconst audioWorkletSupported = window.AudioWorklet && !detectIOS() && !detectSafari();\n\nconst states = {\n\tSTOPPED : 0,\n\tRECORDING : 1,\n\tPAUSED : 2,\n\tSTARTING : 3,\n\tSTOPPING : 4\n};\n\nconst DEFAULT_OPTIONS = {\n\trecordingGain : 1,\n\tencoderBitRate : 96,\n\tstreaming : false,\n\tstreamBufferSize : 50000,\n\tforceScriptProcessor : false,\n\tconstraints : {\n\t\tchannelCount : 1,\n\t\tautoGainControl : true,\n\t\techoCancellation : true,\n\t\tnoiseSuppression : true\n\t}\n};\n\nlet workerUrl = null;\n\nfunction createCancelStartError() {\n\tlet error = new Error(\"AudioRecorder start cancelled by call to stop\");\n\terror.name = \"CancelStartError\";\n\treturn error;\n}\n\nfunction getNumberOfChannels(stream) {\n\tlet audioTracks = stream.getAudioTracks();\n\t\n\tif (audioTracks.length < 1) {\n\t\tthrow new Error(\"No audio tracks in user media stream\");\n\t}\n\t\n\tlet trackSettings = audioTracks[0].getSettings();\n\treturn \"channelCount\" in trackSettings ? trackSettings.channelCount : 1;\n}\n\n// Worklet does nothing more than pass the data out, to be actually encoded by a regular Web Worker\n// Previously this was rewritten to do the encoding within an AudioWorklet, and it was all very nice and clean\n// but apparently doing anything that uses much CPU in a AudioWorklet will cause glitches in some browsers.\n// So, it's best to do the encoding in a regular Web Worker.\nconst AUDIO_OUTPUT_MODULE_URL = URL.createObjectURL(new Blob([`\n\tclass AudioOutputProcessor extends AudioWorkletProcessor {\n\t\tprocess(inputs, outputs) {\n\t\t\tthis.port.postMessage(inputs[0]);\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tregisterProcessor(\"audio-output-processor\", AudioOutputProcessor);\n`], {type : \"application/javascript\"}));\n\n/*\nCallbacks:\n\tondataavailable\n\tonstart - called when recording successfully started\n\tonstop - called when all data finished encoding and was output\n\tonerror - error starting recording\n*/\nexport default class AudioRecorder {\n\tconstructor(options) {\n\t\tthis.options = {\n\t\t\t...DEFAULT_OPTIONS,\n\t\t\t...options\n\t\t};\n\n\t\tthis.state = states.STOPPED;\n\t\tthis.audioContext = null;\n\t\tthis.encoder = null;\n\t\tthis.encodedData = null;\n\t\tthis.stopPromiseResolve = null;\n\t\tthis.stopPromiseReject = null;\n\t\tthis.timer = new Timer();\n\t}\n\t\n\tstatic isRecordingSupported() {\n\t\treturn AudioContext && navigator && navigator.mediaDevices && navigator.mediaDevices.getUserMedia;\n\t}\n\t\n\tstatic preload(_workerUrl) {\n\t\tworkerUrl = _workerUrl;\n\t\tWorkerEncoder.preload(workerUrl);\n\t}\n\t\n\t// Will we use AudioWorklet?\n\tuseAudioWorklet() {\n\t\treturn audioWorkletSupported && !this.options.forceScriptProcessor;\n\t}\n\t\n\tcreateAndStartEncoder(numberOfChannels) {\n\t\tthis.encoder = new WorkerEncoder({\n\t\t\toriginalSampleRate : this.audioContext.sampleRate,\n\t\t\tnumberOfChannels : numberOfChannels,\n\t\t\tencoderBitRate : this.options.encoderBitRate,\n\t\t\tstreamBufferSize : this.options.streamBufferSize\n\t\t});\n\n\t\tthis.encoder.ondataavailable = (data) => {\n\t\t\tif (this.options.streaming) {\n\t\t\t\tthis.ondataavailable && this.ondataavailable(data);\n\t\t\t} else {\n\t\t\t\tthis.encodedData.push(data);\n\t\t\t}\n\t\t};\n\n\t\tthis.encoder.onstopped = () => {\n\t\t\tthis.state = states.STOPPED;\n\t\t\tlet mp3Blob = this.options.streaming ? undefined : new Blob(this.encodedData, {type : \"audio/mpeg\"});\n\t\t\tthis.onstop && this.onstop(mp3Blob);\n\t\t\tthis.stopPromiseResolve(mp3Blob);\n\t\t};\n\n\t\tthis.encoder.start();\n\t}\n\n\tcreateOutputNode(numberOfChannels) {\t\t\n\t\tif (this.useAudioWorklet()) {\n\t\t\tconsole.log(\"Using AudioWorklet\");\n\n\t\t\tthis.outputNode = new AudioWorkletNode(this.audioContext, \"audio-output-processor\", {numberOfOutputs : 0});\n\n\t\t\tthis.outputNode.port.onmessage = ({data}) => {\n\t\t\t\tif (this.state == states.RECORDING) {\n\t\t\t\t\tthis.encoder.sendData(data);\n\t\t\t\t}\n\t\t\t};\n\t\t} else {\n\t\t\tconsole.log(\"Using ScriptProcessorNode\");\n\t\t\t\n\t\t\tthis.outputNode = this.audioContext.createScriptProcessor(4096, numberOfChannels, numberOfChannels);\n\n\t\t\tthis.outputNode.connect(this.audioContext.destination);\n\t\t\tthis.outputNode.onaudioprocess = (event) => {\n\t\t\t\tif (this.state == states.RECORDING) {\n\t\t\t\t\tlet inputBuffer = event.inputBuffer;\n\t\t\t\t\tlet buffers = [];\n\n\t\t\t\t\tfor (let i = 0; i < inputBuffer.numberOfChannels; i ++) {\n\t\t\t\t\t\tbuffers.push(inputBuffer.getChannelData(i));\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.encoder.sendData(buffers);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\t\n\tcreateAudioNodes(numberOfChannels) {\n\t\tthis.createOutputNode(numberOfChannels);\n\t\t\n\t\tthis.recordingGainNode = this.audioContext.createGain();\n\t\tthis.setRecordingGain(this.options.recordingGain);\n\t\tthis.recordingGainNode.connect(this.outputNode);\n\n\t\tthis.sourceNode = this.audioContext.createMediaStreamSource(this.stream);\n\t\tthis.sourceNode.connect(this.recordingGainNode);\n\t}\n\n\tcleanupAudioNodes() {\n\t\tif (this.stream) {\n\t\t\tstopStream(this.stream);\n\t\t\tthis.stream = null;\n\t\t}\n\t\t\n\t\tif (this.useAudioWorklet()) {\n\t\t\tthis.outputNode && (this.outputNode.port.onmessage = null);\n\t\t} else {\n\t\t\tthis.outputNode && (this.outputNode.onaudioprocess = null);\n\t\t}\n\t\t\n\t\tthis.outputNode && this.outputNode.disconnect();\n\t\tthis.recordingGainNode && this.recordingGainNode.disconnect();\n\t\tthis.sourceNode && this.sourceNode.disconnect();\n\t\tthis.audioContext && this.audioContext.close();\n\t}\n\n\tsetRecordingGain(gain) {\n\t\tthis.options.recordingGain = gain;\n\n\t\tif (this.recordingGainNode) {\n\t\t\tthis.recordingGainNode.gain.setTargetAtTime(gain, this.audioContext.currentTime, 0.01);\n\t\t}\n\t}\n\t\n\tget time() {\n\t\treturn this.timer.getTime();\n\t}\n\t\n\t// Get the amount of data left to be encoded.\n\t// Useful to estimate if STOPPING state (encoding still ongoing) will last a while.\n\tgetEncodingQueueSize() {\n\t\treturn this.encoder ? this.encoder.getQueuedDataLen() : 0;\n\t}\n\t\n\t// Called after every \"await\" in start(), to check that stop wasn't called\n\t// and we should abandon starting\n\tstoppingCheck() {\n\t\tif (this.state == states.STOPPING) {\n\t\t\tthrow createCancelStartError();\n\t\t}\n\t}\n\n\tasync __start(paused) {\n\t\tif (this.state != states.STOPPED) {\n\t\t\tthrow new Error(\"Called start when not in stopped state\");\n\t\t}\n\t\t\n\t\tif (workerUrl == null) {\n\t\t\tthrow new Error(\"preload was not called on AudioRecorder\");\n\t\t}\n\t\t\n\t\tthis.state = states.STARTING;\n\t\tthis.encodedData = [];\n\t\tthis.stream = null;\n\t\t\n\t\ttry {\n\t\t\tawait WorkerEncoder.waitForWorker(workerUrl);\n\t\t\tthis.stoppingCheck();\n\t\t\t\n\t\t\t// If a constraint is set, pass them, otherwise just pass true\n\t\t\tlet constraints = Object.keys(this.options.constraints).length > 0 ? this.options.constraints : true;\n\t\t\t\n\t\t\tthis.stream = await navigator.mediaDevices.getUserMedia({audio : constraints});\n\t\t\tthis.stoppingCheck();\n\t\t\t\t\t\t\n\t\t\tthis.audioContext = new AudioContext();\n\t\t\t\n\t\t\tif (this.useAudioWorklet()) {\n\t\t\t\tawait this.audioContext.audioWorklet.addModule(AUDIO_OUTPUT_MODULE_URL, {credentials : \"omit\"});\n\t\t\t\tthis.stoppingCheck();\n\t\t\t}\n\t\t\t\n\t\t\t// Channel count must be gotten from the stream, as it might not have supported\n\t\t\t// the desired amount specified in the constraints\n\t\t\tlet numberOfChannels = getNumberOfChannels(this.stream);\n\t\t\t\n\t\t\t// Successfully recording!\n\t\t\tthis.createAndStartEncoder(numberOfChannels);\n\t\t\tthis.createAudioNodes(numberOfChannels);\n\n\t\t\tif (paused) {\n\t\t\t\tthis.timer.reset();\n\t\t\t\tthis.state = states.PAUSED;\n\t\t\t} else {\n\t\t\t\tthis.timer.resetAndStart();\n\t\t\t\tthis.state = states.RECORDING;\n\t\t\t}\n\n\t\t\tthis.onstart && this.onstart();\n\t\t} catch (error) {\n\t\t\tlet startWasCancelled = this.state == states.STOPPING;\n\t\t\tthis.cleanupAudioNodes();\n\t\t\t\n\t\t\t// Reset so can attempt start again\n\t\t\tthis.state = states.STOPPED;\n\t\t\t\n\t\t\t// Reject the stop promise now we have cleaned up and are in STOPPED state and ready to start() again\n\t\t\tif (startWasCancelled) {\n\t\t\t\tthis.stopPromiseReject(error);\n\t\t\t}\n\t\t\t\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tasync __stop() {\n\t\tthis.timer.stop();\n\t\t\n\t\tif (this.state == states.RECORDING || this.state == states.PAUSED) {\n\t\t\t// Stop recording, but encoding may not have finished yet,\n\t\t\t// so we enter the stopping state.\n\t\t\tthis.state = states.STOPPING;\n\t\t\t\n\t\t\tthis.cleanupAudioNodes();\n\t\t\tthis.encoder.stop();\n\t\t\t\n\t\t\t// Will be resolved later when encoding finishes\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.stopPromiseResolve = resolve;\n\t\t\t});\n\t\t} else if (this.state == states.STARTING) {\n\t\t\tthis.state = states.STOPPING;\n\t\t\t\n\t\t\t// Will be rejected later when start() has completely finished operation\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.stopPromiseReject = reject;\n\t\t\t})\n\t\t}\n\t\t\n\t\tthrow new Error(\"Called stop when AudioRecorder was not started\");\n\t}\n\t\n\tstart(paused = false) {\n\t\tlet promise = this.__start(paused);\n\t\t\n\t\tpromise.catch(error => {\n\t\t\t// Don't send CancelStartError to onerror, as it's not *really* an error state\n\t\t\t// Only used as a promise rejection to indicate that starting did not succeed.\n\t\t\tif (error.name != \"CancelStartError\") {\n\t\t\t\tthis.onerror && this.onerror(error);\n\t\t\t}\n\t\t});\n\t\t\n\t\tif (!this.onerror) {\n\t\t\treturn promise;\n\t\t}\n\t}\n\t\n\tstop() {\n\t\tlet promise = this.__stop();\n\t\t\n\t\tpromise.catch(error => {\n\t\t\tif (error.name == \"CancelStartError\") {\n\t\t\t\t// Stop was called before recording even started\n\t\t\t\t// Send a onstop event anyway to indicate that recording can be retried.\n\t\t\t\tthis.onstop && this.onstop(this.options.streaming ? undefined : null);\n\t\t\t} else {\n\t\t\t\tthis.onerror && this.onerror(error);\n\t\t\t}\n\t\t});\n\t\t\n\t\tif (!this.onerror) {\n\t\t\treturn promise;\n\t\t}\n\t}\n\n\tpause() {\n\t\tif (this.state == states.RECORDING) {\n\t\t\tthis.state = states.PAUSED;\n\t\t\tthis.timer.stop();\n\t\t}\n\t}\n\n\tresume() {\n\t\tif (this.state == states.PAUSED) {\n\t\t\tthis.state = states.RECORDING;\n\t\t\tthis.timer.start();\n\t\t}\n\t}\n}\n","\nexport default class Timer {\n\tconstructor() {\n\t\tthis.reset();\n\t}\n\n\treset() {\n\t\tthis.startTime = null; // May be modified when resuming, so not the true start time.\n\t\tthis.stoppedTime = null;\n\t}\n\n\tstart() {\n\t\tif (!this.startTime) {\n\t\t\tthis.startTime = Date.now();\n\t\t}\n\n\t\tif (this.stoppedTime) {\n\t\t\t// Skip time forward by the time length we were stopped\n\t\t\tthis.startTime += Date.now() - this.stoppedTime;\n\t\t\tthis.stoppedTime = null;\n\t\t}\n\t}\n\t\n\tresetAndStart() {\n\t\tthis.reset();\n\t\tthis.start();\n\t}\n\n\tstop() {\n\t\tif (!this.stoppedTime) {\n\t\t\tthis.stoppedTime = Date.now();\n\t\t}\n\t}\n\n\tgetTime() {\n\t\tif (this.startTime) {\n\t\t\tif (this.stoppedTime) {\n\t\t\t\treturn this.stoppedTime - this.startTime;\n\t\t\t} else {\n\t\t\t\treturn Date.now() - this.startTime;\n\t\t\t}\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n}\n","let workerStates = {\n\tINACTIVE : 0,\n\tLOADING : 1,\n\tREADY : 2,\n\tERROR : 3\n}\n\nlet worker = null;\nlet workerState = workerStates.INACTIVE;\nlet workerStateChangeCallbacks = [];\nlet jobCallbacks = {};\n\nfunction uuidv4() { // https://stackoverflow.com/a/2117523\n\treturn ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>\n\t\t(c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n\t);\n}\n\nfunction notifyWorkerState(newState) {\n\tworkerState = newState;\n\n\tfor (let callback of workerStateChangeCallbacks) {\n\t\tcallback();\n\t}\n\n\tworkerStateChangeCallbacks = [];\n}\n\n// This hack required to load worker from another domain (e.g. a CDN)\n// https://stackoverflow.com/a/62914052\nfunction getWorkerCrossDomainURL(url) {\n\tconst content = `importScripts(\"${url}\");`;\n\treturn URL.createObjectURL(new Blob([content], {type : \"text/javascript\"}));\n}\n\nfunction loadWorker(workerUrl) {\n\tif (/^https?:\\/\\//.test(workerUrl)) { // Is it an absolute URL? Then consider it cross domain.\n\t\tworkerUrl = getWorkerCrossDomainURL(workerUrl);\n\t}\n\n\tworker = new Worker(workerUrl);\n\tworkerState = workerStates.LOADING;\n\n\tworker.onmessage = (event) => {\n\t\tswitch (event.data.message) {\n\t\t\tcase \"ready\":\n\t\t\t\tnotifyWorkerState(workerStates.READY);\n\t\t\t\tbreak;\n\t\t\tcase \"encoded\":\n\t\t\t\tif (event.data.jobId in jobCallbacks) {\n\t\t\t\t\tjobCallbacks[event.data.jobId].onencoded(event.data.srcBufLen);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"data\":\n\t\t\t\tif (event.data.jobId in jobCallbacks) {\n\t\t\t\t\tjobCallbacks[event.data.jobId].ondataavailable(event.data.data);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"stopped\":\n\t\t\t\tif (event.data.jobId in jobCallbacks) {\n\t\t\t\t\tjobCallbacks[event.data.jobId].onstopped();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tworker.onerror = (event) => {\n\t\tconsole.error(\"mp3worker error event\", event);\n\t\tnotifyWorkerState(workerStates.ERROR);\n\t};\n}\n\n// Callbacks:\n// - ondataavailable\n// - onstopped\nexport default class WorkerEncoder {\n\tconstructor(options) {\n\t\tthis.jobId = uuidv4();\n\t\tthis.options = options;\n\t\tthis.queuedData = 0;\n\n\t\tjobCallbacks[this.jobId] = {\n\t\t\tonencoded : (srcBufLen) => {\n\t\t\t\tthis.queuedData -= srcBufLen;\n\t\t\t},\n\t\t\tondataavailable : (data) => {\n\t\t\t\tthis.ondataavailable && this.ondataavailable(data);\n\t\t\t},\n\t\t\tonstopped : () => {\n\t\t\t\tdelete jobCallbacks[this.jobId]; // Clean up\n\t\t\t\tthis.onstopped && this.onstopped();\n\t\t\t}\n\t\t};\n\t}\n\n\tstatic preload(workerUrl) {\n\t\tif (workerState == workerStates.INACTIVE || workerState == workerStates.ERROR) {\n\t\t\tloadWorker(workerUrl);\n\t\t}\n\t}\n\n\tstatic waitForWorker(workerUrl) {\n\t\tif (workerState == workerStates.READY) {\n\t\t\treturn Promise.resolve();\n\t\t} else {\n\t\t\t// Worker loading already failed, try again...\n\t\t\tif (workerState == workerStates.INACTIVE || workerState == workerStates.ERROR) {\n\t\t\t\tloadWorker(workerUrl);\n\t\t\t}\n\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tworkerStateChangeCallbacks.push(() => {\n\t\t\t\t\tif (workerState == workerStates.READY) {\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet error = new Error(\"MP3 worker failed\");\n\t\t\t\t\t\terror.name = \"WorkerError\";\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\tstart() {\n\t\tworker.postMessage({\n\t\t\tcommand : \"start\",\n\t\t\tjobId : this.jobId,\n\t\t\toptions : this.options\n\t\t});\n\t}\n\n\tsendData(buffers) {\n\t\t// Check for an empty buffer\n\t\tif (buffers && buffers.length > 0 && buffers[0].length > 0) {\n\t\t\tthis.queuedData += buffers[0].length;\n\t\t\t\n\t\t\tworker.postMessage({\n\t\t\t\tcommand : \"data\",\n\t\t\t\tjobId : this.jobId,\n\t\t\t\tbuffers : buffers\n\t\t\t});\n\t\t}\n\t}\n\t\n\t// Amount of data that is not yet encoded.\n\tgetQueuedDataLen() {\n\t\treturn this.queuedData;\n\t}\n\n\tstop() {\n\t\tworker.postMessage({\n\t\t\tcommand : \"stop\",\n\t\t\tjobId : this.jobId\n\t\t});\n\t}\n}\n","\nexport function stopStream(stream) {\n\tif (stream.getTracks) {\n\t\tstream.getTracks().forEach(track => track.stop());\n\t} else {\n\t\tstream.stop(); // Deprecated\n\t}\n}\n\n// https://stackoverflow.com/a/9039885\nexport function detectIOS() {\n\treturn [\n\t\t'iPad Simulator',\n\t\t'iPhone Simulator',\n\t\t'iPod Simulator',\n\t\t'iPad',\n\t\t'iPhone',\n\t\t'iPod'\n\t].includes(navigator.platform)\n\t\t// iPad on iOS 13 detection\n\t\t|| (navigator.userAgent.includes(\"Mac\") && \"ontouchend\" in document);\n}\n\nexport function detectSafari() {\n\treturn /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE_react__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {useRef, useState, useEffect} from \"react\";\nimport AudioRecorder from \"./AudioRecorder.js\";\n\nexport const RecorderStates = {\n\tINITIAL : 0,\n\tSTARTING : 1,\n\tRECORDING : 2,\n\tPAUSED : 3,\n\tENCODING : 4,\n\tCOMPLETE : 5,\n\tERROR : 6,\n\tCOUNTDOWN : 7\n};\n\nfunction useInterval(updateFunc, timeStep = 1000/60.0) {\n\tconst intervalIdRef = useRef(null);\n\t\n\tuseEffect(() => {\n\t\tintervalIdRef.current = setInterval(updateFunc, timeStep);\n\t\t\n\t\treturn () => {\n\t\t\tintervalIdRef.current && clearInterval(intervalIdRef.current);\n\t\t};\n\t}, []);\n}\n\nexport function useSimpleAudioRecorder({\n\tworkerUrl,\n\tonDataAvailable,\n\tonComplete,\n\tonError,\n\toptions,\n\tcleanup = false,\n\ttimeUpdateStep = 111,\n\tcountdown = 0\n} = {}) {\n\tconst [recorderState, setRecorderState] = useState(RecorderStates.INITIAL);\n\tconst [mp3Blobs, setMp3Blobs] = useState([]);\n\tconst [mp3Urls, setMp3Urls] = useState([]);\n\tconst [error, setError] = useState(null);\n\tconst [time, setTime] = useState(0);\n\tconst [countdownStartTime, setCountdownStartTime] = useState(null);\n\tconst [countdownTimeLeft, setCountdownTimeLeft] = useState(0);\n\n\tconst recorderStateRef = useRef(recorderState);\n\tconst countdownStartTimeRef = useRef(0);\n\t\n\tconst recorderRef = useRef(null);\n\tconst audioDataRef = useRef(null);\n\tconst countdownTimerRef = useRef(null);\n\n\trecorderStateRef.current = recorderState;\n\tcountdownStartTimeRef.current = countdownStartTime;\n\n\tfunction clearCountdownTimeout() {\n\t\tif (countdownTimerRef.current != null) {\n\t\t\tclearTimeout(countdownTimerRef.current);\n\t\t\tcountdownTimerRef.current = null;\n\t\t}\n\t}\n\t\n\tuseEffect(() => {\n\t\tif (workerUrl) {\n\t\t\tAudioRecorder.preload(workerUrl);\n\t\t}\n\t\t\n\t\treturn () => {\n\t\t\tclearCountdownTimeout();\n\n\t\t\tif (recorderRef.current) {\n\t\t\t\trecorderRef.current.ondataavailable = null;\n\t\t\t\trecorderRef.current.onstart = null;\n\t\t\t\trecorderRef.current.onstop = null;\n\t\t\t\trecorderRef.current.onerror = null;\n\t\t\t\trecorderRef.current.stop();\n\t\t\t\trecorderRef.current = null;\n\t\t\t}\n\t\t\t\n\t\t\tif (cleanup) {\n\t\t\t\tmp3Urls.forEach(URL.revokeObjectURL);\n\t\t\t}\n\t\t};\n\t}, []);\n\t\n\tuseInterval(() => {\n\t\t\trecorderRef.current && setTime(recorderRef.current.time);\n\n\t\t\tif (recorderStateRef.current == RecorderStates.COUNTDOWN) {\n\t\t\t\tsetCountdownTimeLeft(Math.max(0, countdown - (Date.now() - countdownStartTimeRef.current)));\n\t\t\t}\n\t}, timeUpdateStep);\n\t\n\tfunction start() {\n\t\taudioDataRef.current = [];\n\t\trecorderRef.current = new AudioRecorder({...options, streaming : true});\n\t\t\n\t\tsetRecorderState(RecorderStates.STARTING);\n\t\tsetCountdownTimeLeft(countdown);\n\t\t\n\t\trecorderRef.current.ondataavailable = (data) => {\n\t\t\taudioDataRef.current.push(data);\n\t\t\tonDataAvailable && onDataAvailable(data);\n\t\t};\n\t\t\n\t\trecorderRef.current.onstart = () => {\n\t\t\tif (countdown > 0) {\n\t\t\t\tsetRecorderState(RecorderStates.COUNTDOWN);\n\t\t\t\tsetCountdownStartTime(Date.now());\n\n\t\t\t\tcountdownTimerRef.current = setTimeout(() => {\n\t\t\t\t\tif (recorderStateRef.current == RecorderStates.COUNTDOWN) {\n\t\t\t\t\t\trecorderRef.current.resume();\n\t\t\t\t\t\tsetRecorderState(RecorderStates.RECORDING);\n\t\t\t\t\t\tsetCountdownTimeLeft(0);\n\t\t\t\t\t}\n\t\t\t\t}, countdown);\n\t\t\t} else {\n\t\t\t\tsetRecorderState(RecorderStates.RECORDING);\n\t\t\t}\n\t\t\tsetError(null);\n\t\t};\n\t\t\n\t\trecorderRef.current.onstop = () => {\n\t\t\t// Combine all the mp3 data chunks from the audioData array into a Blob\n\t\t\tconst mp3Blob = new Blob(audioDataRef.current, {type : \"audio/mpeg\"});\n\t\t\tconst mp3Url = URL.createObjectURL(mp3Blob);\n\t\t\tsetRecorderState(RecorderStates.COMPLETE);\n\t\t\tsetMp3Blobs([...mp3Blobs, mp3Blob]);\n\t\t\tsetMp3Urls([...mp3Urls, mp3Url]);\n\t\t\tonComplete && onComplete({mp3Blob, mp3Url});\n\t\t};\n\t\t\n\t\trecorderRef.current.onerror = (error) => {\n\t\t\tsetRecorderState(RecorderStates.ERROR);\n\t\t\tsetError(error);\n\t\t\tonError && onError(error);\n\t\t};\n\t\t\n\t\trecorderRef.current.start(countdown > 0);\n\t}\n\t\n\tfunction stop() {\n\t\tclearCountdownTimeout();\n\n\t\tif (recorderRef.current.getEncodingQueueSize() > 1000) {\n\t\t\t// If there's a fair amount of data left, we'll enter the ENCODING state.\n\t\t\t// (so a spinner or something could be shown)\n\t\t\tsetRecorderState(RecorderStates.ENCODING);\n\t\t}\n\t\t\n\t\trecorderRef.current.stop();\n\t}\n\t\n\tfunction pause() {\n\t\tif (recorderStateRef.current == RecorderStates.RECORDING) {\n\t\t\trecorderRef.current.pause();\n\t\t\tsetRecorderState(RecorderStates.PAUSED);\n\t\t}\n\t}\n\t\n\tfunction resume() {\n\t\tif (recorderStateRef.current == RecorderStates.PAUSED) {\n\t\t\trecorderRef.current.resume();\n\t\t\tsetRecorderState(RecorderStates.RECORDING);\n\t\t}\n\t}\n\t\n\tconst props = {recorderState};\n\t\n\treturn {\n\t\terror,\n\t\terrorStr : error ? error.toString() : null,\n\t\ttime,\n\t\tcountdownTimeLeft,\n\t\tmp3Blobs,\n\t\tmp3Urls,\n\t\tmp3Blob : mp3Blobs.at(-1),\n\t\tmp3Url : mp3Urls.at(-1),\n\t\tstart,\n\t\tstop,\n\t\tpause,\n\t\tresume,\n\t\t...props,\n\t\tgetProps : () => props\n\t};\n}\n\nexport function SimpleAudioRecorder({\n\trecorderState,\n\tviewInitial, viewStarting, viewCountdown, viewRecording, viewPaused, viewEncoding, viewComplete, viewError\n}) {\n\t// Only viewInitial and viewRecording are required.\n\t// Others will default to one of viewInitial or viewRecording if not specified, for a simpler UI.\n\n\t// if viewStarting is not set, we fallback first to viewCountdown, and then to viewRecording\n\tviewStarting = viewStarting ?? (viewCountdown ?? viewRecording);\n\tviewCountdown = viewCountdown ?? viewRecording;\n\tviewPaused = viewPaused ?? viewInitial;\n\tviewEncoding = viewEncoding ?? viewComplete;\n\tviewComplete = viewComplete ?? viewInitial;\n\tviewError = viewError ?? viewInitial;\n\t\n\tconst stateMap = new Map();\n\tstateMap.set(RecorderStates.INITIAL, viewInitial);\n\tstateMap.set(RecorderStates.STARTING, viewStarting);\n\tstateMap.set(RecorderStates.COUNTDOWN, viewCountdown);\n\tstateMap.set(RecorderStates.RECORDING, viewRecording);\n\tstateMap.set(RecorderStates.PAUSED, viewPaused);\n\tstateMap.set(RecorderStates.ENCODING, viewEncoding);\n\tstateMap.set(RecorderStates.COMPLETE, viewComplete);\n\tstateMap.set(RecorderStates.ERROR, viewError);\n\t\n\treturn stateMap.get(recorderState) ?? RecorderStates.INITIAL;\n}\n\nexport function preloadWorker(workerUrl) {\n\tAudioRecorder.preload(workerUrl);\n}\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","_objectSpread","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","_classCallCheck","_defineProperties","key","_createClass","_toPrimitive","toPrimitive","String","Number","WorkerEncoder","Timer","stopStream","detectIOS","detectSafari","AudioContext","window","webkitAudioContext","audioWorkletSupported","AudioWorklet","states","STOPPED","RECORDING","PAUSED","STARTING","STOPPING","DEFAULT_OPTIONS","recordingGain","encoderBitRate","streaming","streamBufferSize","forceScriptProcessor","constraints","channelCount","autoGainControl","echoCancellation","noiseSuppression","workerUrl","createCancelStartError","error","getNumberOfChannels","stream","audioTracks","getAudioTracks","trackSettings","getSettings","AUDIO_OUTPUT_MODULE_URL","URL","createObjectURL","Blob","AudioRecorder","options","state","audioContext","encoder","encodedData","stopPromiseResolve","stopPromiseReject","timer","useAudioWorklet","createAndStartEncoder","numberOfChannels","_this","originalSampleRate","sampleRate","ondataavailable","data","onstopped","mp3Blob","undefined","onstop","start","createOutputNode","_this2","console","log","outputNode","AudioWorkletNode","numberOfOutputs","port","onmessage","_ref","sendData","createScriptProcessor","connect","destination","onaudioprocess","event","inputBuffer","buffers","getChannelData","createAudioNodes","recordingGainNode","createGain","setRecordingGain","sourceNode","createMediaStreamSource","cleanupAudioNodes","disconnect","close","gain","setTargetAtTime","currentTime","get","getTime","getEncodingQueueSize","getQueuedDataLen","stoppingCheck","_start","_callee","paused","startWasCancelled","_callee$","_context","waitForWorker","navigator","mediaDevices","getUserMedia","audio","audioWorklet","addModule","credentials","resetAndStart","onstart","t0","__start","_x","_stop","_callee2","_this3","_callee2$","_context2","reject","__stop","_this4","promise","onerror","_this5","pause","resume","isRecordingSupported","preload","_workerUrl","default","startTime","stoppedTime","Date","now","workerStates","INACTIVE","LOADING","READY","ERROR","worker","workerState","workerStateChangeCallbacks","jobCallbacks","uuidv4","replace","crypto","getRandomValues","Uint8Array","toString","notifyWorkerState","newState","_i","_workerStateChangeCal","callback","getWorkerCrossDomainURL","url","content","concat","loadWorker","test","Worker","message","jobId","onencoded","srcBufLen","queuedData","postMessage","command","getTracks","track","includes","platform","userAgent","document","useRef","useState","useEffect","RecorderStates","INITIAL","ENCODING","COMPLETE","COUNTDOWN","useInterval","updateFunc","timeStep","intervalIdRef","current","setInterval","clearInterval","useSimpleAudioRecorder","onDataAvailable","onComplete","onError","_ref$cleanup","cleanup","_ref$timeUpdateStep","timeUpdateStep","_ref$countdown","countdown","_useState","_useState2","_slicedToArray","recorderState","setRecorderState","_useState3","_useState4","mp3Blobs","setMp3Blobs","_useState5","_useState6","mp3Urls","setMp3Urls","_useState7","_useState8","setError","_useState9","_useState10","time","setTime","_useState11","_useState12","countdownStartTime","setCountdownStartTime","_useState13","_useState14","countdownTimeLeft","setCountdownTimeLeft","recorderStateRef","countdownStartTimeRef","recorderRef","audioDataRef","countdownTimerRef","clearCountdownTimeout","clearTimeout","revokeObjectURL","Math","max","setTimeout","mp3Url","_toConsumableArray","props","errorStr","at","getProps","SimpleAudioRecorder","_ref2","_stateMap$get","viewInitial","viewStarting","viewCountdown","viewRecording","viewPaused","viewEncoding","viewComplete","viewError","stateMap","Map","set","preloadWorker"],"sourceRoot":""}